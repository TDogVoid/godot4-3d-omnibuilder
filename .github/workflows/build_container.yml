name: Build and Verify Container
on:
  pull_request:
    branches: [ "main" ]
env:
  IMAGE_NAME: godot4-omnibuilder3d
  GODOT_VERSION: 4.1.1
  RELEASE_NAME: stable
  EXPORT_NAME: omnibuilder_test_project
  PROJECT_PATH: test_project
jobs:
  build_image:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Bunch of stuff to make GitVersion Work
      - name: Fetch all history for all tags and branches
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        id: gitversion
        with:
          useConfigFile: true
      - run:  echo IMAGE_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - name: Login to GitHub Container Registry 
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run:  echo IMAGE_TAG=$(echo ${{ env.RELEASE_NAME != 'stable' && format('.{0}', env.RELEASE_NAME) || '' }}) >> $GITHUB_ENV
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{steps.gitversion.outputs.semVer}}-${{ env.GODOT_VERSION }}${{ env.IMAGE_TAG }}
          build-args: |
            GODOT_VERSION=${{ env.GODOT_VERSION }}
            RELEASE_NAME=${{ env.RELEASE_NAME }}
      - name: Output image tag for test project build
        run: |
          echo "image_and_tag=ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{steps.gitversion.outputs.semVer}}-${{ env.GODOT_VERSION }}${{ env.IMAGE_TAG }}" >> "$GITHUB_OUTPUT"
  build_project_linux:
    name: Build Test Project (Linux)
    needs: build_image
    runs-on: ubuntu-latest
    container:
      image: ${{needs.build_image.outputs.image_and_tag}}
      env:
        EXPORT_NAME: omnibuilder_test_project
        PROJECT_PATH: test_project
    steps:
      - name: Linux Build
        run: |
          cd $PROJECT_PATH
          env
          mkdir -v -p build/linux
          godot --headless -d -v --export-release "Linux/X11" build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux
  build_project_windows:
    name: Build Test Project (Windows Desktop)
    needs: build_image
    runs-on: ubuntu-latest
    container:
      image: ${{needs.build_image.outputs.image_and_tag}}
    steps:
      - name: Windows Build
        run: |
          cd $PROJECT_PATH
          env
          mkdir -v -p build/windows
          godot --headless -v --export-release "Windows Desktop" build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows
