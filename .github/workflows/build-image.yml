name: Build Image
on:
  workflow_call:
    inputs:
      sem_ver:
        description: "Semantic version of this repository"
        required: true
        type: string
      godot_version:
        description: Godot Version Semver
        default: "4.4"
        required: true
        type: string
      release_name:
        description: Release tag, ie stable, rc1, dev, ect
        default: stable
        required: true
        type: string
      release_image:
        description: Whether or not to push this image to dockerhub
        default: false
        type: boolean
    outputs:
      github_image_name_and_tag:
        description: Name and tag of the image that was built
        value: ghcr.io/${{ jobs.compute_image_tags.outputs.versioned_tag }}

env:
  IMAGE_NAME: godot4-omnibuilder3d
jobs:
  compute_image_tags:
    name: Create Image Tag From Godot Version
    runs-on: ubuntu-latest
    steps:
      - name: Write repo owner
        id: write_image_owner
        run: echo IMAGE_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: normalize_semver
        run:
          echo TAG_SEM_VER=$(echo ${{ inputs.sem_ver }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Write Image tag from Godot Version
        run: echo IMAGE_TAG=$(echo ${{ inputs.release_name != 'stable' && format('.{0}', inputs.release_name) || '' }}) >> $GITHUB_ENV

      - name: Output image name for test project build
        id: write_image_tag
        run: |
          echo "VERSIONED_IMAGE_TAG=${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.TAG_SEM_VER }}-${{ inputs.godot_version }}${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT
          echo "LATEST_IMAGE_TAG=${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:latest-${{ inputs.godot_version }}${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT
    outputs:
      image_owner: ${{ steps.write_image_owner.outputs.IMAGE_OWNER }}
      versioned_tag: ${{ steps.write_image_tag.outputs.VERSIONED_IMAGE_TAG }}
      latest_tag: ${{ steps.write_image_tag.outputs.LATEST_IMAGE_TAG }}

  build_image:
    name: Build Image
    runs-on: ubuntu-latest
    needs:
      - compute_image_tags
    strategy:
      matrix:
        include:
          - name: .NET Containers
            godot_version: mono-${{ inputs.godot_version }}
            docker_hub_tags: |
              ${{ needs.compute_image_tags.outputs.versioned_tag }}
              ${{ needs.compute_image_tags.outputs.latest_tag }}
              ${{ needs.compute_image_tags.outputs.versioned_tag }}-mono
              ${{ needs.compute_image_tags.outputs.latest_tag }}-mono
            github_tags: |
              ghcr.io/${{ needs.compute_image_tags.outputs.versioned_tag }}
              ghcr.io/${{ needs.compute_image_tags.outputs.latest_tag }}
              ghcr.io/${{ needs.compute_image_tags.outputs.versioned_tag }}-mono
              ghcr.io/${{ needs.compute_image_tags.outputs.latest_tag }}-mono
          - name: Vanilla Containers
            godot_version: ${{ inputs.godot_version }}
            docker_hub_tags: |
              ${{ needs.compute_image_tags.outputs.versioned_tag }}-vanilla
              ${{ needs.compute_image_tags.outputs.latest_tag }}-vanilla
            github_tags: |
              ghcr.io/${{ needs.compute_image_tags.outputs.versioned_tag }}-vanilla
              ghcr.io/${{ needs.compute_image_tags.outputs.latest_tag }}-vanilla
    steps:
      - uses: actions/checkout@v5
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images to Github
        if: ${{ ! inputs.release_image }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ matrix.github_tags }}
          build-args: |
            GODOT_VERSION=${{ matrix.godot_version }}
            RELEASE_NAME=${{ inputs.release_name }}

      - name: Login to DockerHub
        if: ${{ inputs.release_image }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Release Docker images to Dockerhub
        if: ${{ inputs.release_image }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ matrix.docker_hub_tags }}
            
          build-args: |
            GODOT_VERSION=${{ matrix.godot_version }}
            RELEASE_NAME=${{ inputs.release_name }}
